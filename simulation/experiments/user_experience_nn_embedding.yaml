# Scenario where user experience based on job latency is the top criterium.
# Short jobs needs to be evaluated almost interactively, long jobs may be delayed much longer.
# The objective is achieved by imposing limits on queues, only jobs that are expected to
# take no more than given limit are allowed in (all queues remain active the whole time).
# The key part of the scenario is the duration estimation algorithm used by dispatcher.

# This configuration uses dispatcher and SA strategy based on neural-network regression estimator.
# The NN is trained in batches of incoming jobs as the simulation progresses.

# Workers could be either a number or a list that explicitly states a collection of attributes
# If only a number is given, the workers are initialized with no attributes at the beginning.
workers:
  - active: true
  - active: true
    limit: 30.0
  - active: true
    limit: 30.0
  - active: true
    limit: 30.0

# dispatcher component: either a string (fully qualified class name) or a collection with { class, args }
# where class is fully qualified class name and args is list or dict holding constructor arguments
dispatcher: dispatchers.DurationFilterDispatcher

duration_predictor:
  class: duration_predictors.nn_embedding_duration_predictor.NNEmbeddingDurationPredictor
  args:
    layer_widths: [ 512, 256 ]  # each value represents a width of one hidden layer
    batch_size: 500
    batch_epochs: 5
    hash_converters: "@@hash_converters"
    embedding_training_data: "../data/release02-2023-01-04/exercise_tlgroup.csv"
    embedding_dim: 100
    embedding_batch_size: 5000
    embedding_batch_epochs: 100


period: 60  # in seconds, how often a sa strategy (MAPE-K loop) is invoked

# list of metric components (each one is in the same format as dispatcher)
metrics:
  - metrics.default.JobDelayMetricsCollector
  - metrics.quantile.JobDelayQuantilesCollector
  - class: metrics.user_experience.UserExperienceMetricsCollectorWithHistory
    args:
      - "@@ref_jobs"
      - [ 1.5, 3.0 ]  # thresholds
      - 10000  # history step
